/*
 * solar-system
 * @Description Solar System with Threejs
 * @version v0.0.30 - 2015-09-02
 * @link https://github.com/KenEDR/three-solar-system#readme
 * @author Enrique Daimiel Ruiz <k.daimiel@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
THREE.SolarBody=function(a){THREE.Object3D.call(this),this.name=a.name,this.type="SolarBody",this.category=a.category,this.radius=a.radius||50,this.vRotation=a.vRotation||0,this.URLTexture=a.URLTexture,this.tilt=a.tilt||0,this.geometry=new THREE.SphereGeometry(this.radius,50,50);var b=THREE.ImageUtils.loadTexture(this.URLTexture);this.material=new THREE.MeshBasicMaterial({map:b}),this.rotation.x=this.tilt,a.ringsProperties&&this.createRings(a.ringsProperties),this.updateMorphTargets()},THREE.SolarBody.prototype=Object.create(THREE.Mesh.prototype),THREE.SolarBody.prototype.constructor=THREE.SolarBody,THREE.SolarBody.prototype.createRings=function(a){var b=new THREE.SolarRings(a);this.add(b)},THREE.SolarBody.prototype.update=function(){this.rotation.y-=this.vRotation*Math.PI/180},THREE.SolarCamera=function(a){THREE.PerspectiveCamera.call(this),this.type="SolarCamera",this.zoom=void 0!==a.zoom?a.zoom:1,this.fov=void 0!==a.fov?a.fov:50,this.aspect=void 0!==a.aspect?a.aspect:window.innerWidth/window.innerHeight,this.near=void 0!==a.near?a.near:.1,this.far=void 0!==a.far?a.far:2e3,this.position.x=void 0!==a.position.x?a.position.x:0,this.position.y=void 0!==a.position.y?a.position.y:0,this.position.z=void 0!==a.position.z?a.position.z:0,this.updateProjectionMatrix()},THREE.SolarCamera.prototype=Object.create(THREE.PerspectiveCamera.prototype),THREE.SolarCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.SolarOrbit=function(a){THREE.Object3D.call(this),this.name=a.name,this.type="SolarOrbit",this.radius=a.radius||50,this.speed=a.speed||0,this.tilt=a.tilt||0},THREE.SolarOrbit.prototype=Object.create(THREE.Object3D.prototype),THREE.SolarOrbit.prototype.constructor=THREE.SolarOrbit,THREE.SolarOrbit.prototype.update=function(){this.rotation.y-=this.speed*Math.PI/180},THREE.SolarRings=function(a){THREE.Object3D.call(this),this.type="SolarRings",this.URLTexture=a.URLTexture,this.vRotation=a.vRotation||0,this.tilt=a.tilt||0,this.geometry=new THREE.SolarRingsGeometry(a);var b=THREE.ImageUtils.loadTexture(a.URLTexture);this.material=new THREE.MeshBasicMaterial({map:b,side:THREE.DoubleSide}),this.rotation.x=(90-this.tilt)*Math.PI/180,this.updateMorphTargets()},THREE.SolarRings.prototype=Object.create(THREE.Mesh.prototype),THREE.SolarRings.prototype.constructor=THREE.SolarRings,THREE.SolarRings.prototype.update=function(){this.rotation.y-=this.vRotation*Math.PI/180},THREE.SolarRingsGeometry=function(a){THREE.Geometry.call(this),this.type="SolarRingsGeometry",this.innerRadius=a.innerRadius||0,this.outerRadius=a.outerRadius||50,this.thetaStart=void 0!==a.thetaStart?a.thetaStart:0,this.thetaLength=void 0!==a.thetaLength?a.thetaLength:2*Math.PI,this.thetaSegments=void 0!==a.thetaSegments?Math.max(3,a.thetaSegments):50,this.phiSegments=void 0!==a.phiSegments?Math.max(1,a.phiSegments):50;var b,c,d,e=[],f=this.innerRadius,g=(a.outerRadius-a.innerRadius)/this.phiSegments;for(b=0;b<this.phiSegments+1;b++){for(c=0;c<this.thetaSegments+1;c++){var h=new THREE.Vector3;d=this.thetaStart+c/this.thetaSegments*this.thetaLength,h.x=f*Math.cos(d),h.y=f*Math.sin(d),this.vertices.push(h),e.push(new THREE.Vector2(b/(this.thetaSegments-1),c/(this.phiSegments-1)))}f+=g}var i=new THREE.Vector3(0,0,1);for(b=0;b<this.phiSegments;b++){var j=b*(this.thetaSegments+1);for(c=0;c<this.thetaSegments;c++){d=c+j;var k=d,l=d+this.thetaSegments+1,m=d+this.thetaSegments+2;this.faces.push(new THREE.Face3(k,l,m,[i.clone(),i.clone(),i.clone()])),this.faceVertexUvs[0].push([e[k].clone(),e[l].clone(),e[m].clone()]),k=d,l=d+this.thetaSegments+2,m=d+1,this.faces.push(new THREE.Face3(k,l,m,[i.clone(),i.clone(),i.clone()])),this.faceVertexUvs[0].push([e[k].clone(),e[l].clone(),e[m].clone()])}}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,f)},THREE.SolarRingsGeometry.prototype=Object.create(THREE.RingGeometry.prototype),THREE.SolarRingsGeometry.prototype.constructor=THREE.SolarRingsGeometry,define("scene-factory",function(){"use strict";function a(a){g=new THREE.SolarCamera(a),i=new THREE.TrackballControls(g),i.addEventListener("change",c)}function b(a){var b=new THREE.SolarBody(a);if(j.push(b),a.orbitRound){var c,d={name:a.name,radius:a.orbitRadius,speed:a.orbitSpeed,tilt:a.orbitTilt},e=new THREE.SolarOrbit(d);for(var g in k)a.orbitRound===k[g].name&&(c=k[g]);c?(e.position.z=c.position.z+c.radius||0,c.add(e)):f.add(e),k.push(e),b.position.z=e.radius||0,e.add(b)}else f.add(b)}function c(){h.render(f,g)}function d(){f=new THREE.Scene,h=new THREE.WebGLRenderer({alpha:!0}),h.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(h.domElement),e()}function e(){requestAnimationFrame(e);for(var a in j)j[a].update();for(var b in k)k[b].update();i.update(),c()}var f,g,h,i,j=[],k=[],l={createCamera:a,createBody:b,init:d};return l}),define("solar-service",function(){"use strict";function a(a){c("../src/data/camera.properties.json",a)}function b(a){c("../src/data/bodies.properties.json",a)}function c(a,b){$.ajax(a,{success:function(a){return b(a)},error:function(a){console.error("Load JSON error:"+a)}})}var d={getCamera:a,getBodies:b};return d}),require(["scene-factory","solar-service"],function(a,b){function c(c){a.createCamera(c),a.init(),b.getBodies(d)}function d(b){b.forEach(function(b){a.createBody(b)})}b.getCamera(c)});