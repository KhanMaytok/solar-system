/*
 * solar-system
 * @Description Solar System with Threejs
 * @version v0.0.37 - 2015-09-14
 * @link https://github.com/KenEDR/three-solar-system#readme
 * @author Enrique Daimiel Ruiz <k.daimiel@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
THREE.Orbit=function(a){THREE.Object3D.call(this),this.name=a.name,this.type="Orbit",this.radius=a.radius||50,this.speed=a.speed||0,this.tilt=a.tilt||0},THREE.Orbit.prototype=Object.create(THREE.Object3D.prototype),THREE.Orbit.prototype.constructor=THREE.Orbit,THREE.Orbit.prototype.update=function(){this.rotation.y-=this.speed*Math.PI/180;for(var a in this.children)this.children[a].update()},THREE.Planet=function(a){function b(a){var b=new THREE.MeshPhongMaterial;return b.map=THREE.ImageUtils.loadTexture(a.map),b.bumpMap=void 0!==a.bumpMap?THREE.ImageUtils.loadTexture(a.bumpMap):void 0,b.bumpScale=.05,b.specularMap=void 0!==a.specularMap?THREE.ImageUtils.loadTexture(a.specularMap):void 0,b.specular=new THREE.Color("grey"),b}THREE.Object3D.call(this),this.name=a.name,this.type="Planet",this.category=a.category,this.radius=a.radius||50,this.vRotation=a.vRotation||0,this.URLTexture=a.URLTexture,this.tilt=a.tilt||0,this.geometry=new THREE.SphereGeometry(this.radius,50,50),a.textureProperties.name=this.name,this.material=b(a.textureProperties),this.rotation.x=this.tilt,a.cloudsProperties&&this.createClouds(a.cloudsProperties),a.ringsProperties&&this.createRings(a.ringsProperties),this.updateMorphTargets()},THREE.Planet.prototype=Object.create(THREE.Mesh.prototype),THREE.Planet.prototype.constructor=THREE.Planet,THREE.Planet.prototype.createClouds=function(a){a.radius=a.radius||this.radius+10;var b=new THREE.SphereGeometry(a.radius,50,50),c=THREE.ImageUtils.loadTexture(a.map),d=new THREE.MeshPhongMaterial({map:c,side:THREE.DoubleSide,opacity:a.opacity,transparent:a.transparent,depthWrite:a.depthWrite}),e=new THREE.Mesh(b,d);e.rotation.x=this.tilt,e.update=function(){this.rotation.x-=a.speed*Math.PI/180,this.rotation.y-=a.speed*Math.PI/180,this.rotation.z-=a.speed*Math.PI/180},this.add(e)},THREE.Planet.prototype.createRings=function(a){var b=new THREE.Rings(a);this.add(b)},THREE.Planet.prototype.update=function(){this.rotation.y-=this.vRotation*Math.PI/180;for(var a in this.children)this.children[a].update()},THREE.Rings=function(a){THREE.Object3D.call(this),this.type="Rings",this.map=a.map,this.vRotation=a.vRotation||0,this.tilt=a.tilt||0,this.geometry=new THREE.RingsGeometry(a);var b=THREE.ImageUtils.loadTexture(this.map);this.material=new THREE.MeshBasicMaterial({map:b,side:THREE.DoubleSide}),this.rotation.x=(90-this.tilt)*Math.PI/180},THREE.Rings.prototype=Object.create(THREE.Mesh.prototype),THREE.Rings.prototype.constructor=THREE.Rings,THREE.Rings.prototype.update=function(){this.rotation.y-=this.vRotation*Math.PI/180},THREE.RingsGeometry=function(a){THREE.Geometry.call(this),this.type="RingsGeometry",this.innerRadius=a.innerRadius||0,this.outerRadius=a.outerRadius||50,this.thetaStart=void 0!==a.thetaStart?a.thetaStart:0,this.thetaLength=void 0!==a.thetaLength?a.thetaLength:2*Math.PI,this.thetaSegments=void 0!==a.thetaSegments?Math.max(3,a.thetaSegments):50,this.phiSegments=void 0!==a.phiSegments?Math.max(1,a.phiSegments):50;var b,c,d,e=[],f=this.innerRadius,g=(a.outerRadius-a.innerRadius)/this.phiSegments;for(b=0;b<this.phiSegments+1;b++){for(c=0;c<this.thetaSegments+1;c++){var h=new THREE.Vector3;d=this.thetaStart+c/this.thetaSegments*this.thetaLength,h.x=f*Math.cos(d),h.y=f*Math.sin(d),this.vertices.push(h),e.push(new THREE.Vector2(b/(this.thetaSegments-1),c/(this.phiSegments-1)))}f+=g}var i=new THREE.Vector3(0,0,1);for(b=0;b<this.phiSegments;b++){var j=b*(this.thetaSegments+1);for(c=0;c<this.thetaSegments;c++){d=c+j;var k=d,l=d+this.thetaSegments+1,m=d+this.thetaSegments+2;this.faces.push(new THREE.Face3(k,l,m,[i.clone(),i.clone(),i.clone()])),this.faceVertexUvs[0].push([e[k].clone(),e[l].clone(),e[m].clone()]),k=d,l=d+this.thetaSegments+2,m=d+1,this.faces.push(new THREE.Face3(k,l,m,[i.clone(),i.clone(),i.clone()])),this.faceVertexUvs[0].push([e[k].clone(),e[l].clone(),e[m].clone()])}}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,f)},THREE.RingsGeometry.prototype=Object.create(THREE.RingGeometry.prototype),THREE.RingsGeometry.prototype.constructor=THREE.RingsGeometry,THREE.SolarCamera=function(a){THREE.PerspectiveCamera.call(this),this.type="SolarCamera",this.zoom=void 0!==a.zoom?a.zoom:1,this.fov=void 0!==a.fov?a.fov:50,this.aspect=void 0!==a.aspect?a.aspect:window.innerWidth/window.innerHeight,this.near=void 0!==a.near?a.near:.1,this.far=void 0!==a.far?a.far:2e3,this.position.x=void 0!==a.position.x?a.position.x:0,this.position.y=void 0!==a.position.y?a.position.y:0,this.position.z=void 0!==a.position.z?a.position.z:0,this.updateProjectionMatrix()},THREE.SolarCamera.prototype=Object.create(THREE.PerspectiveCamera.prototype),THREE.SolarCamera.prototype.constructor=THREE.PerspectiveCamera,require(["scene-factory","solar-service"],function(a,b){function c(c){a.createCamera(c),a.init(),b.getPlanets(d)}function d(a){a.forEach(function(a){e(a)})}function e(b){var c=new THREE.Planet(b);g[c.name]=c,b.orbitProperties?f(c,b.orbitProperties):a.addObject(c)}function f(b,c){c.name=b.name;var d=new THREE.Orbit(c),e=h[c.round]?h[c.round]:void 0;e?(d.position.z=e.position.z+e.radius||0,e.add(d)):a.addObject(d),h[c.name]=d,b.position.z=d.radius||0,d.add(b)}var g={},h={};b.getCamera(c)}),define("scene-factory",function(){"use strict";function a(a){f.add(a)}function b(a){g=new THREE.SolarCamera(a),i=new THREE.TrackballControls(g),i.addEventListener("change",c)}function c(){h.render(f,g)}function d(){f=new THREE.Scene,h=new THREE.WebGLRenderer({alpha:!0}),h.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(h.domElement);var a=new THREE.AmbientLight(16777215);f.add(a),e()}function e(){requestAnimationFrame(e);for(var a in f.children)f.children[a].update&&f.children[a].update();i.update(),c()}var f,g,h,i,j={addObject:a,createCamera:b,init:d};return j}),define("solar-service",function(){"use strict";function a(a){c("../src/data/camera.properties.json",a)}function b(a){c("../src/data/planets.properties.json",a)}function c(a,b){$.ajax(a,{success:function(a){return b(a)},error:function(a){console.error("Load JSON error:"+a)}})}var d={getCamera:a,getPlanets:b};return d});