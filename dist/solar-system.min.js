/*
 * solar-system
 * @Description Solar System with Threejs
 * @version v0.0.96 - 2015-12-28
 * @link https://github.com/kdaimiel/solar-system#readme
 * @author Enrique Daimiel Ruiz <k.daimiel@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
THREE.SolarBody=function(a){THREE.Object3D.call(this),this.name=a.name,this.type=a.type,this.geometry=new THREE.Geometry,this.material=new THREE.MeshBasicMaterial,a.cloudsProperties&&this.addClouds(a.cloudsProperties),a.ringsProperties&&this.addRings(a.ringsProperties),this.updateMorphTargets()},THREE.SolarBody.prototype=Object.create(THREE.Mesh.prototype),THREE.SolarBody.prototype.constructor=THREE.SolarBody,THREE.SolarBody.prototype.addClouds=function(a){this.add(new THREE.CloudsMesh(a))},THREE.SolarBody.prototype.addRings=function(a){this.add(new THREE.RingsMesh(a))},THREE.SolarBody.prototype.addSatellite=function(a,b){var c=new THREE.OrbitMesh(b);a.orbit=c,this.orbit?(this.orbit.add(c),c.position.z=this.position.z||0):this.parent.add(c),c.add(a),a.position.z=this.radius+c.distance+a.radius||0},THREE.SolarBody.prototype.loadMap=function(a,b){a=new THREE.MeshPhongMaterial({map:b.map,side:THREE.DoubleSide,opacity:b.opacity,transparent:b.transparent,depthWrite:b.depthWrite})},require(["scene-builder","scene-factory","solar-service"],function(a,b,c){function d(){a.init(),c.getCamera(f),c.getBodies(g),c.getLights(h)}function e(b){var c;switch(b.type){case"Star":c=new THREE.StarMesh(b);break;case"Planet":c=new THREE.PlanetMesh(b);break;case"Dwarf Planet":c=new THREE.PlanetMesh(b);break;case"Moon":c=new THREE.PlanetMesh(b);break;default:return void console.error(b.type+" is not considered a kind of solar body")}i[c.name]=c,b.orbitProperties?i[b.orbitProperties.round].addSatellite(c,b.orbitProperties):a.addObject(c)}function f(c){var d=b.createCamera(c);a.setCamera(d);var e=b.createControls(d,c.controls);a.setControls(e),a.animate()}function g(a){a.forEach(function(a){e(a)})}function h(c){c.forEach(function(c){var d=b.createLight(c);a.addObject(d)})}var i={};d()}),THREE.RingsGeometry=function(a){THREE.Geometry.call(this),this.type="RingsGeometry",this.innerRadius=a.innerRadius||0,this.outerRadius=a.outerRadius||50,this.thetaStart=void 0!==a.thetaStart?a.thetaStart:0,this.thetaLength=void 0!==a.thetaLength?a.thetaLength:2*Math.PI,this.thetaSegments=void 0!==a.thetaSegments?Math.max(3,a.thetaSegments):50,this.phiSegments=void 0!==a.phiSegments?Math.max(1,a.phiSegments):50;var b,c,d,e=[],f=this.innerRadius,g=(a.outerRadius-a.innerRadius)/this.phiSegments;for(b=0;b<this.phiSegments+1;b++){for(c=0;c<this.thetaSegments+1;c++){var h=new THREE.Vector3;d=this.thetaStart+c/this.thetaSegments*this.thetaLength,h.x=f*Math.cos(d),h.y=f*Math.sin(d),this.vertices.push(h),e.push(new THREE.Vector2(b/(this.thetaSegments-1),c/(this.phiSegments-1)))}f+=g}var i=new THREE.Vector3(0,0,1);for(b=0;b<this.phiSegments;b++){var j=b*(this.thetaSegments+1);for(c=0;c<this.thetaSegments;c++){d=c+j;var k=d,l=d+this.thetaSegments+1,m=d+this.thetaSegments+2;this.faces.push(new THREE.Face3(k,l,m,[i.clone(),i.clone(),i.clone()])),this.faceVertexUvs[0].push([e[k].clone(),e[l].clone(),e[m].clone()]),k=d,l=d+this.thetaSegments+2,m=d+1,this.faces.push(new THREE.Face3(k,l,m,[i.clone(),i.clone(),i.clone()])),this.faceVertexUvs[0].push([e[k].clone(),e[l].clone(),e[m].clone()])}}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,f)},THREE.RingsGeometry.prototype=Object.create(THREE.RingGeometry.prototype),THREE.RingsGeometry.prototype.constructor=THREE.RingsGeometry,THREE.CloudsMesh=function(a){function b(b){this.geometry=new THREE.SphereGeometry(a.radius,100,100),this.material=new THREE.MeshPhongMaterial({map:b,side:THREE.DoubleSide,opacity:a.opacity,transparent:a.transparent,depthWrite:a.depthWrite}),this.updateMorphTargets()}THREE.Object3D.call(this),this.speed=a.speed||.2,this.type=a.type||"CloudsMesh",this.geometry=new THREE.Geometry,this.material=new THREE.MeshBasicMaterial;var c=new THREE.TextureLoader;c.load(a.map,b.bind(this))},THREE.CloudsMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.CloudsMesh.prototype.constructor=THREE.CloudsMesh,THREE.CloudsMesh.prototype.update=function(){this.rotation.x-=THREE.Math.randFloat(0,this.speed)*Math.PI/180,this.rotation.y-=THREE.Math.randFloat(0,this.speed)*Math.PI/180},THREE.OrbitMesh=function(a){THREE.Object3D.call(this),this.type="OrbitMesh",this.distance=a.distance||50,this.speed=a.speed||0,this.tilt=a.tilt||0,this.geometry=new THREE.Geometry,this.material=new THREE.MeshBasicMaterial,this.updateMorphTargets()},THREE.OrbitMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.OrbitMesh.prototype.constructor=THREE.OrbitMesh,THREE.OrbitMesh.prototype.update=function(){this.rotation.y-=this.speed*Math.PI/180;for(var a in this.children)this.children[a].update()},THREE.PlanetMesh=function(a){function b(b){this.material=new THREE.MeshPhongMaterial({map:b,side:THREE.DoubleSide}),a.bumpMap&&e.load(a.bumpMap,c.bind(this)),a.specularMap&&e.load(a.specularMap,d.bind(this))}function c(a){this.material.bumpMap=a}function d(a){this.material.specularMap=a}THREE.SolarBody.call(this,a),this.radius=a.radius||50,this.rotation.x=a.tilt||0,this.vRotation=a.vRotation||0,this.geometry=new THREE.SphereGeometry(this.radius||50,100,100);var e=new THREE.TextureLoader;e.load(a.map,b.bind(this))},THREE.PlanetMesh.prototype=Object.create(THREE.SolarBody.prototype),THREE.PlanetMesh.prototype.constructor=THREE.PlanetMesh,THREE.PlanetMesh.prototype.update=function(a){this.rotation.y-=this.vRotation*Math.PI/180;for(var b in this.children)this.children[b].update(a,this)},THREE.RingsMesh=function(a){function b(b){this.geometry=new THREE.RingsGeometry(a),this.material=new THREE.MeshPhongMaterial({map:b,side:THREE.DoubleSide})}THREE.Mesh.call(this),this.type="RingsMesh",this.rotation.x=(90-(a.tilt||0))*Math.PI/180,this.vRotation=a.vRotation||0;var c=new THREE.TextureLoader;c.load(a.map,b.bind(this))},THREE.RingsMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.RingsMesh.prototype.constructor=THREE.RingsMesh,THREE.RingsMesh.prototype.update=function(){this.rotation.y-=this.vRotation*Math.PI/180},THREE.StarMesh=function(a){function b(a){this.material=new THREE.MeshBasicMaterial({map:a,side:THREE.BackSide});var b=new THREE.PointLight(16777215,1.5,4500);b.update=function(a){for(var c in b.children)b.children[c].update&&b.children[c].update(a)},this.add(b),this.createLensFlare()}THREE.SolarBody.call(this,a),this.radius=a.radius||50,this.rotation.x=a.tilt||0,this.vRotation=a.vRotation||0,this.intesity=a.intensity||.8;var c=new THREE.TextureLoader;c.load(a.map,b.bind(this)),this.geometry=new THREE.SphereGeometry(this.radius||50,100,100)},THREE.StarMesh.prototype=Object.create(THREE.SolarBody.prototype),THREE.StarMesh.prototype.constructor=THREE.StarMesh,THREE.StarMesh.prototype.update=function(a){this.rotation.y-=this.vRotation*Math.PI/180;for(var b in this.children)this.children[b].update(a,this)},THREE.StarMesh.prototype.createLensFlare=function(){var a=2*this.radius*this.intesity,b=new THREE.Color(16777215),c=new THREE.LensFlare(b),d=new THREE.TextureLoader;d.load("img/sun/lensflare1.png",function(b){c.add(b,16*a,0,THREE.AdditiveBlending)}),d.load("img/sun/lensflare2.png",function(b){c.add(b,16*a,0,THREE.AdditiveBlending)}),d.load("img/sun/lensflare3.png",function(b){c.add(b,16*a,0,THREE.AdditiveBlending)}),d.load("img/sun/lensflare4.png",function(b){c.add(b,64*a,0,THREE.AdditiveBlending)}),c.position=this.position,c.update=function(a,b){var c=a.position.distanceTo(b.position);for(var d in this.lensFlares)this.lensFlares[d].position=b.position,this.lensFlares[d].scale=this.lensFlares[d].size/c;this.updateLensFlares()},this.add(c),this.hasLensFlare=!0},define("scene-builder",function(){"use strict";function a(a){i=a,console.log("New camera has been placed in the scene")}function b(a){h.add(a),console.log('New object of type "'+a.type+'"" has been added to the scene')}function c(a){k=a,k.addEventListener("change",d),console.log("New controls have been added to the camera")}function d(){j.render(h,i)}function e(){h=new THREE.Scene,j=new THREE.WebGLRenderer({alpha:!0}),j.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(j.domElement),l=new Stats,l.domElement.style.position="absolute",l.domElement.style.top="0px",document.body.appendChild(l.domElement),window.addEventListener("resize",g,!1),console.log("Scene initiated")}function f(){requestAnimationFrame(f);for(var a in h.children)h.children[a].update&&h.children[a].update(i);k&&k.update(),d(),l.update()}function g(){i.aspect=window.innerWidth/window.innerHeight,i.updateProjectionMatrix(),j.setSize(window.innerWidth,window.innerHeight),k.handleResize()}var h,i,j,k,l,m={addObject:b,animate:f,setCamera:a,setControls:c,init:e};return m}),define("scene-factory",function(){"use strict";function a(a){var b;switch(a.aspect=a.aspect||window.innerWidth/window.innerHeight,a.type){case"PerspectiveCamera":b=new THREE.PerspectiveCamera(a.fov,a.aspect,a.near,a.far);break;case"CubeCamera":b=new THREE.CubeCamera(a.near,a.far,a.cubeResolution);break;case"OrthographicCamera":b=new THREE.OrthographicCamera(a.left,a.right,a.top,a.bottom,a.near,a.far);break;default:return void console.error(a.type+" is not a kind of valid camera")}return a.position&&(b.position.x=a.position.x||0,b.position.y=a.position.y||0,b.position.z=a.position.z||0),b.zoom=a.zoom||1,b}function b(a,b){var c;switch(b){case"TrackballControls":c=new THREE.TrackballControls(a);break;case"DeviceOrientationControls":c=new THREE.DeviceOrientationControls(a);break;case"FlyControls":c=new THREE.FlyControls(a);break;case"OrbitControls":c=new THREE.OrbitControls(a);break;case"PointerLockControls":c=new THREE.PointerLockControls(a);break;case"TransformControls":c=new THREE.TransformControls(a);break;default:return void console.error(b+" is not a kind of valid camera controls")}return c}function c(a){var b,c=new THREE.Color(a.hexColor)||16777215;switch(a.type){case"AmbientLight":b=new THREE.AmbientLight(c);break;case"DirectionalLight":b=new THREE.DirectionalLight(c,a.intensity||.5);break;case"PointLight":b=new THREE.PointLight(c,a.intensity||1,a.distance||0,a.decay||1);break;case"SpotLight":b=new THREE.SpotLight(c,a.intensity||1,a.distance||0,a.angle||Math.PI/3,a.exponent||10,a.decay||1);break;default:return void console.error(a.type+" is not a kind of valid light")}return a.position&&b.position.set(a.position.x||0,a.position.y||0,a.position.z||0),b.castShadow=a.castShadow||!1,b.shadowCamera=a.shadowCamera,b.shadowMatrix=a.shadowMatrix,b.shadowMap=a.shadowMap,b}var d={createCamera:a,createControls:b,createLight:c};return d}),define("solar-service",function(){"use strict";function a(a){d("../src/data/camera.properties.json",a)}function b(a){d("../src/data/bodies.properties.json",a)}function c(a){d("../src/data/lights.properties.json",a)}function d(a,b){$.ajax(a,{success:function(a){return b(a)},error:function(b){console.error("Load "+a+" error :"+b)}})}var e={getCamera:a,getBodies:b,getLights:c};return e});